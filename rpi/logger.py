import socket
import json
import csv
import time
from datetime import datetime

IP = "10.0.0.2"          # IP Arduino
PORT = 5000              # –ü–æ—Ä—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º —Å–ª—É—à–∞–µ—Ç Arduino
CSV_FILE = "logs/sensor_log.csv"  # –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø—É—Ç—å –∫ CSV —Ñ–∞–π–ª—É
INTERVAL_SECONDS = 60    # –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –æ–ø—Ä–æ—Å–∞–º–∏ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è CSV —Ñ–∞–π–ª–∞ —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º
def init_csv():
    try:
        with open(CSV_FILE, "x", newline="") as f:
            writer = csv.writer(f)
            writer.writerow(["timestamp", "temperature_C", "humidity_air_%", "humidity_soil_adc"])
    except FileExistsError:
        pass  # —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ª–æ–≥–≥–µ—Ä–∞
def log_data():
    while True:
        try:
            with socket.create_connection((IP, PORT), timeout=5) as sock:
                sock.sendall(b"GET\n")  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –¥–∞–Ω–Ω—ã—Ö

                # –ü–æ–ª—É—á–∞–µ–º "–ø–æ—Ç–æ–∫" –∏ —á–∏—Ç–∞–µ–º –ø–æ—Å—Ç—Ä–æ—á–Ω–æ
                file_like = sock.makefile()  # –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç —Å–æ–∫–µ—Ç –≤ —Ñ–∞–π–ª–æ–≤—ã–π –æ–±—ä–µ–∫—Ç
                line = file_like.readline().strip()

                print("üì• –ü–æ–ª—É—á–µ–Ω–æ:", line)

                try:
                    data = json.loads(line)
                except json.JSONDecodeError as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑–±–æ—Ä–∞ JSON: {e}")
                    continue

                now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

                row = [
                    now,
                    data.get("temperature"),
                    data.get("humidity_air"),
                    data.get("humidity_soil")
                ]

                with open(CSV_FILE, "a", newline="") as f:
                    writer = csv.writer(f)
                    writer.writerow(row)

                print(f"‚úÖ –ó–∞–ø–∏—Å–∞–Ω–æ –≤ CSV: {row}")

        except (socket.timeout, ConnectionRefusedError, OSError) as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        except Exception as e:
            print(f"‚ö†Ô∏è –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")

        time.sleep(INTERVAL_SECONDS)

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –ª–æ–≥–≥–µ—Ä–∞... (–Ω–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏)")
    init_csv()
    try:
        log_data()
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
